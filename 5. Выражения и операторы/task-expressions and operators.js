/* Записать в коротком виде:
let a = a + 5;
let b = b * 15;
let c = c - 3;
let d = d % 2;
let k = a + k;
let l = l * b;
let m = m * 3 * k; */

a += 5;
b *= 15;
c -= 3;
d %= 2;
k += a;
l *= b;
m *= 3 * k;



//Возвести переменную в куб, используя краткую запись.

let x;
x = x ** 3;


/* Если переменная равна “маленький”, присвоить ей значение “большой”, иначе “маленький”. 
Сделать тоже самое, используя тернарный оператор. */

let age = '';

let message = (age == 'маленький') ? 'большой' : 'маленький';

console.log( message ); //"маленький"



//Записать условие, используя условный оператор if: если переменная меньше нуля: присвоить ей строку “меньше нуля” если переменная равна нулю: присвоить 1 если больше нуля: используя краткую запись, умножить переменную на 10 Сделать тоже самое, используя тернарный оператор.


// условный оператор if

let a = 5;
if (a < 0) {
    a = 'меньше нуля';
} else if (a == 0) {
    a = 1;
} else if (a > 0) {
    a *= 10;
}

 console.log(a); //50

 // тернарный оператор

let a;
a = (a < 0) ? 'меньше нуля':
    (a == 0) ? 1 :
    (a > 0) ? a *= 10:

console.log(a);



/* Используя конструктор switch, записать следующее условие:

if(a == 'котик') {
  console.log('котик');
} else if(a == 'собака') {
  console.log('собака');
} else if(a == 'хомячок') {
  console.log('хомячок');
} else {
  console.log('неизвестное науке животное');
}
Важно: в консоли вы должны увидеть только одно условие из 4х. */

let a;

switch (a) {
    case 'котик':
        console.log('котик');
        break;
    case 'собака' :
        console.log('собака');
        break;
    case'хомячок' :
        console.log('хомячок');
        break;
    default :
        console.log('неизвестное науке животное');
  }



// Чему равен x в каждом из примеров, объясните почему:
let x = 0 || 'строка'; // равен "строке", так как выбирается первое истинное значение;
let x = 1 && 'строка'; // равен "строке", потому что это первое «ложное» значение;
let x = null || 1; // равен 1, (первое истинное значение);
let x = null && 1; // равен null, потому что это первое «ложное» значение;
let x = 1 && null; // равен null, потому что это первое «ложное» значение;
let x = null || 0 || 1; // равен  1, (первое истинное значение);
let x = null && 0 && 1; // равен null, потому что это первое «ложное» значение.





// Чему равен x в каждом из примеров, объясните почему:
let x = 1 + 2 + '3'; //33, при сложении происходит конкатенация
let x = 1 + 2 - '1'; //2 приводит к числу автоматически
let x = '1' + 2 - 1; //2 приводит к числу автоматически
let x = true + 1; //NaN
let x = +'1' + 2; //3 приводит к числу автоматически
let x = null + 2; //NaN
let x = undefined + 2; //NaN
let x = true + undefined; //NaN